<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.colin.mapper.yw.YwOrderDetailMapper">

    <resultMap id="BaseResultMap" type="org.colin.model.entity.yw.YwOrderDetail">
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="order_number" jdbcType="VARCHAR" property="orderNumber"/>
        <result column="goods_name" jdbcType="VARCHAR" property="goodsName"/>
        <result column="goods_price" jdbcType="DECIMAL" property="goodsPrice"/>
        <result column="buy_count" jdbcType="INTEGER" property="buyCount"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, order_number, goods_name, goods_price, buy_count
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from yw_order_detail
        where id = #{id,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from yw_order_detail
    where id = #{id,jdbcType=VARCHAR}
  </delete>
    <insert id="insert" parameterType="org.colin.model.entity.yw.YwOrderDetail">
    insert into yw_order_detail (id, order_number, goods_name, 
      goods_price, buy_count)
    values (#{id,jdbcType=VARCHAR}, #{orderNumber,jdbcType=VARCHAR}, #{goodsName,jdbcType=VARCHAR}, 
      #{goodsPrice,jdbcType=DECIMAL}, #{buyCount,jdbcType=INTEGER})
  </insert>
    <insert id="insertSelective" parameterType="org.colin.model.entity.yw.YwOrderDetail">
        insert into yw_order_detail
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="orderNumber != null">
                order_number,
            </if>
            <if test="goodsName != null">
                goods_name,
            </if>
            <if test="goodsPrice != null">
                goods_price,
            </if>
            <if test="buyCount != null">
                buy_count,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="orderNumber != null">
                #{orderNumber,jdbcType=VARCHAR},
            </if>
            <if test="goodsName != null">
                #{goodsName,jdbcType=VARCHAR},
            </if>
            <if test="goodsPrice != null">
                #{goodsPrice,jdbcType=DECIMAL},
            </if>
            <if test="buyCount != null">
                #{buyCount,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="org.colin.model.entity.yw.YwOrderDetail">
        update yw_order_detail
        <set>
            <if test="orderNumber != null">
                order_number = #{orderNumber,jdbcType=VARCHAR},
            </if>
            <if test="goodsName != null">
                goods_name = #{goodsName,jdbcType=VARCHAR},
            </if>
            <if test="goodsPrice != null">
                goods_price = #{goodsPrice,jdbcType=DECIMAL},
            </if>
            <if test="buyCount != null">
                buy_count = #{buyCount,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="org.colin.model.entity.yw.YwOrderDetail">
    update yw_order_detail
    set order_number = #{orderNumber,jdbcType=VARCHAR},
      goods_name = #{goodsName,jdbcType=VARCHAR},
      goods_price = #{goodsPrice,jdbcType=DECIMAL},
      buy_count = #{buyCount,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>

    <!--批量插入订单详情-->
    <insert id="batchAddDetail">
        INSERT INTO yw_order_detail (
        id, order_number, goods_name, goods_price, buy_count
        )
        VALUES
        <foreach item="item" collection="list" index="index" separator=",">
            (
            #{item.id},
            #{item.orderNumber},
            #{item.goodsName},
            #{item.goodsPrice},
            #{item.buyCount}
            )
        </foreach>
    </insert>
</mapper>