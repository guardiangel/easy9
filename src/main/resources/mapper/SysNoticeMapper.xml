<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.colin.mapper.SysNoticeMapper">

  <resultMap id="BaseResultMap" type="org.colin.model.ro.SysNotice">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="update_user" jdbcType="VARCHAR" property="updateUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="notice_content" jdbcType="VARCHAR" property="noticeContent" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="bak1" jdbcType="VARCHAR" property="bak1" />
    <result column="bak2" jdbcType="VARCHAR" property="bak2" />
  </resultMap>
  <sql id="Base_Column_List">
    id, update_user, update_time, notice_content, type, bak1, bak2
  </sql>
  <select id="selectAll" parameterType="java.lang.String" resultType="org.colin.model.vo.resp.SysNoticeRespVO">
    select
        t1.id, t1.update_user, t1.update_time, t1.notice_content, t1.type, t1.bak1, t1.bak2, t2.real_name as updateUserName, t3.dic_value as typeName
    from sys_notice t1
    left join sys_user t2 on t1.update_user = t2.id
    left join sys_dic_info t3 on t1.type = t3.dic_code and t3.type_code = 'NOTICE_TYPE'
    order by t1.update_time desc
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultType="org.colin.model.vo.resp.SysNoticeRespVO">
    select
        t1.id, t1.update_user, t1.update_time, t1.notice_content, t1.type, t1.bak1, t1.bak2, t2.real_name as updateUserName
    from sys_notice t1
    left join sys_user t2 on t1.update_user = t2.id
    where t1.id = #{id}
  </select>
  <select id="getNoticeByType" parameterType="java.lang.String" resultType="org.colin.model.vo.resp.SysNoticeRespVO">
    select
        t1.id, t1.update_user, t1.update_time, t1.notice_content, t1.type, t1.bak1, t1.bak2, t2.real_name as updateUserName
    from sys_notice t1
    left join sys_user t2 on t1.update_user = t2.id
    where type = #{type}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from sys_notice
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="org.colin.model.ro.SysNotice">
    insert into sys_notice (id, update_user, update_time, 
      notice_content, type, bak1, 
      bak2)
    values (#{id,jdbcType=VARCHAR}, #{updateUser,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{noticeContent,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, #{bak1,jdbcType=VARCHAR}, 
      #{bak2,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.colin.model.ro.SysNotice">
    insert into sys_notice
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="noticeContent != null">
        notice_content,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="bak1 != null">
        bak1,
      </if>
      <if test="bak2 != null">
        bak2,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="noticeContent != null">
        #{noticeContent,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="bak1 != null">
        #{bak1,jdbcType=VARCHAR},
      </if>
      <if test="bak2 != null">
        #{bak2,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.colin.model.ro.SysNotice">
    update sys_notice
    <set>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="noticeContent != null">
        notice_content = #{noticeContent,jdbcType=VARCHAR},
      </if>
      <if test="type != null and type != ''">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="bak1 != null">
        bak1 = #{bak1,jdbcType=VARCHAR},
      </if>
      <if test="bak2 != null">
        bak2 = #{bak2,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.colin.model.ro.SysNotice">
    update sys_notice
    set update_user = #{updateUser,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      notice_content = #{noticeContent,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      bak1 = #{bak1,jdbcType=VARCHAR},
      bak2 = #{bak2,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>